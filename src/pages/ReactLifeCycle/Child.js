import React, { Component, PureComponent } from "react";
// PureComponent giá»‘ng háº¿t Component nhÆ°ng sáº½ ko cÃ³ shouldComponentUpdate
// Chá»‰ nháº­n tháº¥y sá»± Ä‘á»•i cá»§a boolean, number, string, undefine, null
// CÃ²n cÃ¡c value nhÆ° [], {} thÃ¬ pháº£i clone á»Ÿ Component cha ra [...], {...}

export default class Child extends PureComponent {
  constructor(props) {
    console.log("ðŸ˜¢ constructor child");
    super(props);
    this.state = {};
  }

  static getDerivedStateFromProps(newProps, currentState) {
    console.log("ðŸ˜¢ getDerivedStateFromProps child");
    return null;
  }

  //   shouldComponentUpdate(newProps, newState) {
  //     // newProps lÃ  props sau khi thay Ä‘á»•i trÆ°á»›c khi render
  //     // newState lÃ  state sau khi thay Ä‘á»•i trÆ°á»›c khi render
  //     console.log("shouldComponentUpdate child: ");

  //     // Can thiá»‡p vÃ o shouldComponentUpdate Ä‘á»ƒ biáº¿t lÃ  khi báº¥m nÃºt tÄƒng number thÃ¬ ko render láº¡i cÃ²n báº¥m like thÃ¬ sáº½ render láº¡i
  //     if (newProps.like != this.props.like) {
  //       return true;
  //     } else {
  //       return false;
  //     }
  //   }

  render() {
    console.log("render: child ");
    return (
      <div className="bg-dark text-white text-center">
        <p>{this.props.like}</p>
      </div>
    );
  }

  componentDidMount() {
    console.log("componentDidMout child: ");
  }

  componentDidUpdate(prevProps, prevState) {
    console.log("componentDidUpdate child: ");
  }

  componentWillUnmount() {
    console.log("ðŸ˜¢ componentWillUnmount child: ");
  }
}
